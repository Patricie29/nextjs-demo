{"ast":null,"code":"// protoze to je ve slozce API - ktera se tak musi jmenovat a musi byt ve slozce PAGES tak tady definujeme pouze funkci co chceme aby se s temi daty delalo \n// toto naimportovat na connectnuti tveho cluster s touto file\nimport { MongoClient } from \"mongodb\";\n\nconst handler = async (req, res) => {\n  if (req.method === 'POST') {\n    const data = req.body; // pomoci req.body accesness ty data co ti prijdou po te POST method\n\n    const {\n      title,\n      description,\n      image,\n      address\n    } = data; // toto je to co ti prijde v tech datech (na to mame vsechny ty kolonky)\n    // a potom co je takto extraknes tyto data muzes poslat do databaze\n    // takto nasi databazi connectneme \n\n    const client = await MongoClient.connect('mongodb+srv://patriciesm:patriciesm@cluster0.dygl91p.mongodb.net/MeetupsNextJs?retryWrites=true&w=majority'); //connect returns a promise so we have to have this handler function as async\n\n    const db = client.db(); // this is how you get hold of the database you're connecting to\n\n    const meetupCollection = db.collection('meetups'); // volitelny nazev pro collection, pokud neexistuje tak se vytvori a pokud existuje tak se prida do existujici\n\n    const result = await meetupCollection.insertOne(data); //it expects object and we know that our data is object already\n    // insert one returns a promise so we can await it as well\n\n    console.log(result); // you can also add some error handling \n    //then you wanna close the connection once you're done\n\n    client.close();\n    res.status(201).json({\n      message: 'Meetup added!'\n    });\n  }\n};\n\nexport default handler;","map":{"version":3,"sources":["/Users/patricie/Desktop/VS-CODE/React with Max/15.NextJS_Project/pages/api/new-meetup.js"],"names":["MongoClient","handler","req","res","method","data","body","title","description","image","address","client","connect","db","meetupCollection","collection","result","insertOne","console","log","close","status","json","message"],"mappings":"AAAA;AAEA;AACA,SAASA,WAAT,QAA4B,SAA5B;;AAEA,MAAMC,OAAO,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAEhC,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACvB,UAAMC,IAAI,GAAGH,GAAG,CAACI,IAAjB,CADuB,CACA;;AACvB,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,WAAT;AAAsBC,MAAAA,KAAtB;AAA6BC,MAAAA;AAA7B,QAAyCL,IAA/C,CAFuB,CAE8B;AAErD;AACA;;AACA,UAAMM,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoB,4GAApB,CAArB,CANuB,CAMiI;;AAExJ,UAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX,CARuB,CAQA;;AAEvB,UAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB,CAVuB,CAU2B;;AAClD,UAAMC,MAAM,GAAG,MAAMF,gBAAgB,CAACG,SAAjB,CAA2BZ,IAA3B,CAArB,CAXuB,CAW+B;AACtD;;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EAbuB,CAcvB;AAEA;;AACAL,IAAAA,MAAM,CAACS,KAAP;AAEAjB,IAAAA,GAAG,CAACkB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB;AAEH;AACJ,CAxBD;;AA2BA,eAAetB,OAAf","sourcesContent":["// protoze to je ve slozce API - ktera se tak musi jmenovat a musi byt ve slozce PAGES tak tady definujeme pouze funkci co chceme aby se s temi daty delalo \n\n// toto naimportovat na connectnuti tveho cluster s touto file\nimport { MongoClient } from \"mongodb\"\n\nconst handler = async (req, res) => {\n\n    if (req.method === 'POST') {\n        const data = req.body  // pomoci req.body accesness ty data co ti prijdou po te POST method\n        const { title, description, image, address } = data  // toto je to co ti prijde v tech datech (na to mame vsechny ty kolonky)\n\n        // a potom co je takto extraknes tyto data muzes poslat do databaze\n        // takto nasi databazi connectneme \n        const client = await MongoClient.connect('mongodb+srv://patriciesm:patriciesm@cluster0.dygl91p.mongodb.net/MeetupsNextJs?retryWrites=true&w=majority')  //connect returns a promise so we have to have this handler function as async\n\n        const db = client.db() // this is how you get hold of the database you're connecting to\n\n        const meetupCollection = db.collection('meetups') // volitelny nazev pro collection, pokud neexistuje tak se vytvori a pokud existuje tak se prida do existujici\n        const result = await meetupCollection.insertOne(data) //it expects object and we know that our data is object already\n        // insert one returns a promise so we can await it as well\n        console.log(result)\n        // you can also add some error handling \n\n        //then you wanna close the connection once you're done\n        client.close()\n\n        res.status(201).json({ message: 'Meetup added!' })\n\n    }\n}\n\n\nexport default handler"]},"metadata":{},"sourceType":"module"}